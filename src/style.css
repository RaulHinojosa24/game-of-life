:root {
  color-scheme: light dark;
  
  --menu-color: #f8f8f8;
  --checkbox-color: #000;
  --retro-button-color: #0D97AC;
}

*, *::after, *::before {
  box-sizing: border-box;
}

html {
  font-family: "VT323", monospace;
  font-size: max(20px, 1rem);
  letter-spacing: .05rem;
}
 
body {
  margin: 0;
  background-color: white;
  height: 100svh;
  overflow: hidden;
  display: flex;
  flex-direction: row-reverse;
}

button, input, label {
  cursor: pointer;
  font-family: inherit;
  font-size: inherit;
}

body:has(nav.right) {
  flex-direction: row;
}

main {
  width: 100%;
  height: 100%;
  flex-shrink: 0;
  position: relative;
  user-select: none;
}

main * {
  position: absolute;
  left: 50%;
  top: 50%;
  translate: -50% -50%;
}

.modal {
  background-color: rgba(0, 0, 0, 0.6);
  position: absolute;
  width: 100vw;
  height: 100svh;
  z-index: 20;
  display: grid;
  place-content: center;
  backdrop-filter: blur(2px);
  padding: 4rem 2rem;
}

.modal .content {
  background-color: var(--menu-color);
  border: 5px solid rgb(165, 165, 165);
  margin-inline: auto;
  max-width: max(50%, 720px);
  padding: 1rem 2rem;
  overflow-y: auto;
  position: relative;
  z-index: 1;
}

.sticky {
  position: sticky;
  top: 0;
  height: 0;
}

.sticky button {
  display: block;
  margin-left: 100%;
  background-color: transparent;
  border: none;
  font-size: 1.5rem;
  padding: 0;
}

.modal:not(.open) {
  display: none;
}

#gridCanvas {
  pointer-events: none;
  z-index: 5;
}

nav {
  transition: transform .3s ease-in-out;
  display: flex;
  flex-direction: row-reverse;
  align-items: center;
  transform: translateX(20px);
  filter: drop-shadow(0px 3px 3px rgb(0, 0, 0, .5));
  pointer-events: none;
  z-index: 10;
}

nav * {
  pointer-events: all;
}

nav.right {
  flex-direction: row;
  transform: translateX(-20px);
}

nav.open {
  transform: translateX(calc(100% - 1px));
}

nav.right.open {
  transform: translateX(calc(-100% + 1px));
}

#toggle-controls {
  display: flex;
  justify-content: center;
  position: relative;
  padding: 48px 6px;
  background-color: var(--menu-color);
  border: none;
  width: 20px;
  border-top-right-radius: 14px;
  border-bottom-right-radius: 14px;
  transition: opacity .1s ease-in-out;
  opacity: .5;
  transform: translateX(-1px);
}

#toggle-controls #left, #toggle-controls #right {
  position: absolute;
  left: 0;
  width: 15px;
  height: 50px;
  overflow: hidden;
}

#toggle-controls #left {
  bottom: 100%;
  transform: translateY(1px);
}

#toggle-controls #right {
  top: 100%;
  transform: translateY(-1px);
}

#toggle-controls #left::after, #toggle-controls #right::after {
  box-sizing: content-box;
  position: absolute;
  right: 0;
  content: '';
  height: 102px;
  width: 40px;
  border-radius: 50%;
  border: 20px solid var(--menu-color);
}
#toggle-controls #left::after {
  top: 0;
  transform: translate(50%, -50%);
}
#toggle-controls #right::after {
  bottom: 0;
  transform: translate(50%, 50%);
}

nav.right #toggle-controls {
  rotate: 180deg;
}

#toggle-controls svg {
  flex-shrink: 0;
  rotate: 90deg;
  transition: transform .3s ease-in-out;
}

nav.open #toggle-controls svg {
  transform: rotateX(180deg);
}

nav.open #toggle-controls, #toggle-controls:hover, #toggle-controls:focus, #toggle-controls:active {
  opacity: 1;
}

#controls {
  height: 100%;
  padding: 2rem 1rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
  background-color: var(--menu-color);
  overflow-y: auto;
  position: relative;
  z-index: 1;
}

label {
  display: flex;
  flex-direction: column-reverse;
  align-items: center;
}

#details {
  width: 100%;
}
#details p {
  margin: 0;
  display: flex;
  flex-direction: column;
}

/* RETRO BUTTON CSS */
button.retro {
  color: var(--checkbox-color);
  text-decoration: none;
  text-transform: uppercase;
  border: none;
  padding: 0.25rem 0.5rem;
  box-shadow: 
  0px 1px 0px 0px rgba(0, 0, 0, 0.2),
  1px 0px 0px 0px rgba(0, 0, 0, 0.5),
  1px 1px 0px 0px var(--retro-button-color),
  1px 2px 0px 0px rgba(0, 0, 0, 0.2),
  2px 1px 0px 0px rgba(0, 0, 0, 0.5),
  2px 2px 0px 0px var(--retro-button-color),
  2px 3px 0px 0px rgba(0, 0, 0, 0.2),
  3px 2px 0px 0px rgba(0, 0, 0, 0.5),
  3px 3px 0px 0px var(--retro-button-color),
  3px 4px 0px 0px rgba(0, 0, 0, 0.2),
  4px 3px 0px 0px rgba(0, 0, 0, 0.5),
  4px 4px 0px 0px var(--retro-button-color),
  4px 5px 0px 0px rgba(0, 0, 0, 0.2),
  5px 4px 0px 0px rgba(0, 0, 0, 0.5),
  5px 5px 0px 0px var(--retro-button-color);
  position: relative;
  user-select: none;
  -webkit-user-select: none;
  touch-action: manipulation;
  background-color: var(--retro-button-color);
  text-wrap: nowrap;
}

button.retro::after {
  z-index: -1;
  content: '';
  position: absolute;
  width: calc(100% + 6px);
  height: calc(100% + 6px);
  background-color: black;
  top: 2px;
  left: 2px;
}

button.retro:active::after {
  top: -3px;
  left: -3px;
}

button.retro:active {
  box-shadow: 0px 0px 0px 0px;
  top: 5px;
  left: 5px;
}

button.retro:active {
  box-shadow: 0px 0px 0px 0px;
  top: 5px;
  left: 5px;
}

/* CHECKBOX CSS */
input[type="checkbox"] {
  display: none;
}

label:has(input[type="checkbox"]) {
  height: 1.5rem;
  aspect-ratio: 2;
  background-color: var(--checkbox-color);
  position: relative;
}

label:has(input[type="checkbox"])::after {
  text-transform: uppercase;
  display: grid;
  place-content: center;
  position: absolute;
  width: calc(100% - 6px);
  height: calc(100% - 6px);
  top: -2px;
  left: -2px;
  background-color: var(--checkbox-color);
  box-shadow: 
  0px 1px 0px 0px rgba(0, 0, 0, 0.2),
  1px 0px 0px 0px rgba(0, 0, 0, 0.5),
  1px 1px 0px 0px var(--checkbox-color),
  1px 2px 0px 0px rgba(0, 0, 0, 0.2),
  2px 1px 0px 0px rgba(0, 0, 0, 0.5),
  2px 2px 0px 0px var(--checkbox-color),
  2px 3px 0px 0px rgba(0, 0, 0, 0.2),
  3px 2px 0px 0px rgba(0, 0, 0, 0.5),
  3px 3px 0px 0px var(--checkbox-color),
  3px 4px 0px 0px rgba(0, 0, 0, 0.2),
  4px 3px 0px 0px rgba(0, 0, 0, 0.5),
  4px 4px 0px 0px var(--checkbox-color),
  4px 5px 0px 0px rgba(0, 0, 0, 0.2),
  5px 4px 0px 0px rgba(0, 0, 0, 0.5),
  5px 5px 0px 0px var(--checkbox-color);
}

label:has(input[type="checkbox"]:active)::after {
  box-shadow: 0px 0px 0px 0px;
  top: 3px;
  left: 3px;
  filter: brightness(75%);
}

label:has(input[type="checkbox"])::after {
  content: 'OFF';
  --checkbox-color: #AB3131;
}

label:has(input[type="checkbox"]:checked)::after {
  content: 'ON';
  --checkbox-color: #799163;
}

@media (min-width: 768px) {
  button.retro {
    padding: 0.25rem 0.75rem;
  }
}

@media (prefers-color-scheme: dark) {
  :root {
    --menu-color: #1f1f1f;
    --checkbox-color: #fff;
  }

  body {
    background-color: black;
  }

  button.retro::after {
    background-color: white;
  }
}